{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN/g3LKYWJ92y7KB0EWRrCo",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MohammadNiazAlizadeh/Signal_systems/blob/main/%D9%BE%D8%B1%D9%88%DA%98%D9%87%20%D8%AA%D8%B1%D8%AC%D9%85%D9%87%20%D9%81%D8%B5%D9%84%2010%20%DA%A9%D8%AA%D8%A7%D8%A8%20%D8%B3%DB%8C%DA%AF%D9%86%D8%A7%D9%84%20%D9%87%D8%A7%20%D9%88%20%D8%B3%DB%8C%D8%B3%D8%AA%D9%85%20%D9%87%D8%A7%20%D8%A7%D9%BE%D9%86%D9%87%D8%A7%DB%8C%D9%85%20%D9%87%D9%85%D8%B1%D8%A7%D9%87%20%D8%A8%D8%A7%20%DA%A9%D8%AF%20%D9%87%D8%A7%DB%8C%20%D9%BE%D8%A7%DB%8C%D8%AA%D9%88%D9%86\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ugII6uh_YHwI"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# مقدمه‌ای بر نمونه‌برداری\n",
        "\n",
        "نمونه‌برداری یکی از مهم‌ترین مراحل در پردازش سیگنال است که طی آن یک سیگنال پیوسته (آنالوگ) به یک دنباله گسسته از مقادیر تبدیل می‌شود. هدف اصلی این فرآیند، آماده‌سازی سیگنال برای پردازش دیجیتال است. از آنجایی که سیستم‌های دیجیتال فقط قادر به پردازش داده‌های گسسته هستند، نمونه‌برداری اولین گام در دیجیتالی کردن سیگنال‌ها به شمار می‌رود.\n",
        "\n",
        "## تعریف نمونه‌برداری\n",
        "\n",
        "در نمونه‌برداری، سیگنال پیوسته $x(t)$ در فواصل زمانی منظم $T_s$ (پریود نمونه‌برداری) نمونه‌برداری می‌شود و نتیجه یک دنباله گسسته $x[n]$ خواهد بود. این دنباله به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "x[n] = x(nT_s), \\quad n \\in \\mathbb{Z}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $T_s$ فاصله زمانی بین دو نمونه متوالی (پریود نمونه‌برداری) است.\n",
        "- $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است که به واحد هرتز (Hz) بیان می‌شود و نشان‌دهنده تعداد نمونه‌هایی است که در هر ثانیه گرفته می‌شود.\n",
        "\n",
        "## هدف از نمونه‌برداری\n",
        "\n",
        "هدف نمونه‌برداری این است که اطلاعات موجود در سیگنال پیوسته به‌طور کامل حفظ شود، به گونه‌ای که بتوان از دنباله گسسته نمونه‌ها، سیگنال اولیه را با دقت کامل بازسازی کرد. اگر فرکانس نمونه‌برداری به اندازه کافی بالا باشد، بازسازی دقیق سیگنال امکان‌پذیر است.\n",
        "\n",
        "## قطار پالس‌های ضربه‌ای و مدل ریاضی نمونه‌برداری\n",
        "\n",
        "برای مدل‌سازی ریاضی فرآیند نمونه‌برداری، سیگنال پیوسته $x(t)$ را با یک قطار پالس ضربه‌ای دیراک $\\delta(t)$ ضرب می‌کنیم. قطار پالس ضربه‌ای به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "\\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "در نتیجه، سیگنال نمونه‌برداری‌شده $x_s(t)$ به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x_s(t) = x(t) \\cdot \\delta_s(t) = x(t) \\cdot \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "این رابطه نشان می‌دهد که سیگنال $x(t)$ فقط در زمان‌های $t = nT_s$ مقدار غیرصفر دارد و در سایر زمان‌ها صفر است.\n",
        "\n",
        "## فرکانس نایکوییست و بازسازی سیگنال\n",
        "\n",
        "برای اینکه بتوان سیگنال نمونه‌برداری‌شده را بدون از دست دادن اطلاعات بازسازی کرد، فرکانس نمونه‌برداری باید حداقل دو برابر بزرگ‌ترین فرکانس موجود در سیگنال باشد. این مقدار به نام **فرکانس نایکوییست** شناخته می‌شود و به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $f_s$ فرکانس نمونه‌برداری است.\n",
        "- $f_{\\text{max}}$ بیشینه فرکانس سیگنال پیوسته است.\n",
        "\n",
        "اگر شرط بالا رعایت نشود، پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث تداخل فرکانس‌ها شده و بازسازی دقیق سیگنال غیرممکن می‌شود.\n"
      ],
      "metadata": {
        "id": "fkjbXE3heWX7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال پیوسته\n",
        "def continuous_signal(t):\n",
        "    return np.sin(2 * np.pi * 5 * t)  # سیگنال سینوسی با فرکانس 5 هرتز\n",
        "\n",
        "# پارامترهای نمونه‌برداری\n",
        "fs = 20  # فرکانس نمونه‌برداری (باید بزرگ‌تر از 2*f_max باشد)\n",
        "Ts = 1 / fs  # پریود نمونه‌برداری\n",
        "t_continuous = np.linspace(0, 1, 1000)  # زمان پیوسته برای نمایش سیگنال\n",
        "t_samples = np.arange(0, 1, Ts)  # زمان نمونه‌ها\n",
        "x_samples = continuous_signal(t_samples)  # نمونه‌های سیگنال\n",
        "\n",
        "# رسم سیگنال پیوسته و نمونه‌های آن\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(t_continuous, continuous_signal(t_continuous), label='Continuous Signal')\n",
        "plt.stem(t_samples, x_samples, basefmt=\" \", linefmt='r-', markerfmt='ro', label='Samples')\n",
        "plt.xlabel('Time (s)')\n",
        "plt.ylabel('Amplitude')\n",
        "plt.title('Signal Sampling')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "AnnBiYBdPSJR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# مقدمه‌ای بر نمونه‌برداری\n",
        "\n",
        "نمونه‌برداری یکی از مهم‌ترین مراحل در پردازش سیگنال است که طی آن یک سیگنال پیوسته (آنالوگ) به یک دنباله گسسته از مقادیر تبدیل می‌شود. هدف اصلی این فرآیند، آماده‌سازی سیگنال برای پردازش دیجیتال است. از آنجایی که سیستم‌های دیجیتال فقط قادر به پردازش داده‌های گسسته هستند، نمونه‌برداری اولین گام در دیجیتالی کردن سیگنال‌ها به شمار می‌رود.\n",
        "\n",
        "## تعریف نمونه‌برداری\n",
        "\n",
        "در نمونه‌برداری، سیگنال پیوسته $x(t)$ در فواصل زمانی منظم $T_s$ (پریود نمونه‌برداری) نمونه‌برداری می‌شود و نتیجه یک دنباله گسسته $x[n]$ خواهد بود. این دنباله به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "x[n] = x(nT_s), \\quad n \\in \\mathbb{Z}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $T_s$ فاصله زمانی بین دو نمونه متوالی (پریود نمونه‌برداری) است.\n",
        "- $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است که به واحد هرتز (Hz) بیان می‌شود و نشان‌دهنده تعداد نمونه‌هایی است که در هر ثانیه گرفته می‌شود.\n",
        "\n",
        "## هدف از نمونه‌برداری\n",
        "\n",
        "هدف نمونه‌برداری این است که اطلاعات موجود در سیگنال پیوسته به‌طور کامل حفظ شود، به گونه‌ای که بتوان از دنباله گسسته نمونه‌ها، سیگنال اولیه را با دقت کامل بازسازی کرد. اگر فرکانس نمونه‌برداری به اندازه کافی بالا باشد، بازسازی دقیق سیگنال امکان‌پذیر است.\n",
        "\n",
        "## قضیه نمونه‌برداری\n",
        "\n",
        "قضیه نمونه‌برداری که به نام **قضیه نایکوییست-شنون** نیز شناخته می‌شود، بیان می‌کند که اگر سیگنال پیوسته دارای بیشینه فرکانس $f_{\\text{max}}$ باشد، برای بازسازی کامل و بدون اعوجاج سیگنال، فرکانس نمونه‌برداری $f_s$ باید حداقل دو برابر این مقدار باشد:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "این حداقل مقدار فرکانس نمونه‌برداری را **فرکانس نایکوییست** می‌نامند:\n",
        "\n",
        "$$\n",
        "f_{\\text{Nyquist}} = 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "### اثبات ایده کلی قضیه نمونه‌برداری\n",
        "\n",
        "فرض کنید سیگنال پیوسته $x(t)$ یک سیگنال باند محدود است، به این معنی که تبدیل فوریه آن $X(f)$ فقط در بازه $[-f_{\\text{max}}, f_{\\text{max}}]$ غیر صفر است. پس از نمونه‌برداری، طیف سیگنال نمونه‌برداری‌شده $X_s(f)$ به صورت تکرارهای طیف اصلی در فرکانس‌های مضرب $f_s$ ظاهر می‌شود:\n",
        "\n",
        "$$\n",
        "X_s(f) = \\sum_{k=-\\infty}^{\\infty} X(f - k f_s)\n",
        "$$\n",
        "\n",
        "اگر $f_s \\geq 2 f_{\\text{max}}$ باشد، تکرارهای طیف اصلی با هم تداخل نخواهند داشت و می‌توان با اعمال یک فیلتر پایین‌گذر، سیگنال اولیه را بازسازی کرد.\n",
        "\n",
        "اما اگر $f_s < 2 f_{\\text{max}}$ باشد، تکرارهای طیف با هم تداخل پیدا می‌کنند و پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث می‌شود بازسازی دقیق سیگنال غیرممکن شود.\n",
        "\n",
        "### بازسازی سیگنال از نمونه‌ها\n",
        "\n",
        "برای بازسازی سیگنال پیوسته از دنباله گسسته نمونه‌ها، از یک **فیلتر پایین‌گذر ایده‌آل** با عرض باند $f_{\\text{max}}$ استفاده می‌شود. سیگنال بازسازی‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x(t) = \\sum_{n=-\\infty}^{\\infty} x[n] \\text{sinc}\\left(\\frac{t - nT_s}{T_s}\\right)\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $\\text{sinc}(x) = \\frac{\\sin(\\pi x)}{\\pi x}$ تابع sinc است.\n",
        "- $T_s$ پریود نمونه‌برداری است.\n",
        "\n",
        "## قطار پالس‌های ضربه‌ای و مدل ریاضی نمونه‌برداری\n",
        "\n",
        "برای مدل‌سازی ریاضی فرآیند نمونه‌برداری، سیگنال پیوسته $x(t)$ را با یک قطار پالس ضربه‌ای دیراک $\\delta(t)$ ضرب می‌کنیم. قطار پالس ضربه‌ای به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "\\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "در نتیجه، سیگنال نمونه‌برداری‌شده $x_s(t)$ به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x_s(t) = x(t) \\cdot \\delta_s(t) = x(t) \\cdot \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "این رابطه نشان می‌دهد که سیگنال $x(t)$ فقط در زمان‌های $t = nT_s$ مقدار غیرصفر دارد و در سایر زمان‌ها صفر است.\n",
        "\n",
        "## فرکانس نایکوییست و بازسازی سیگنال\n",
        "\n",
        "برای اینکه بتوان سیگنال نمونه‌برداری‌شده را بدون از دست دادن اطلاعات بازسازی کرد، فرکانس نمونه‌برداری باید حداقل دو برابر بزرگ‌ترین فرکانس موجود در سیگنال باشد. این مقدار به نام **فرکانس نایکوییست** شناخته می‌شود و به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $f_s$ فرکانس نمونه‌برداری است.\n",
        "- $f_{\\text{max}}$ بیشینه فرکانس سیگنال پیوسته است.\n",
        "\n",
        "اگر شرط بالا رعایت نشود، پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث تداخل فرکانس‌ها شده و بازسازی دقیق سیگنال غیرممکن می‌شود.\n"
      ],
      "metadata": {
        "id": "iTKqPDW5PUtH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال پیوسته\n",
        "def continuous_signal(t):\n",
        "    return np.sin(2 * np.pi * 5 * t)  # سیگنال سینوسی با فرکانس 5 هرتز\n",
        "\n",
        "# پارامترهای نمونه‌برداری\n",
        "fs = 20  # فرکانس نمونه‌برداری (باید بزرگ‌تر از 2*f_max باشد)\n",
        "Ts = 1 / fs  # پریود نمونه‌برداری\n",
        "t_continuous = np.linspace(0, 1, 1000)  # زمان پیوسته برای نمایش سیگنال\n",
        "t_samples = np.arange(0, 1, Ts)  # زمان نمونه‌ها\n",
        "x_samples = continuous_signal(t_samples)  # نمونه‌های سیگنال\n",
        "\n",
        "# رسم سیگنال پیوسته و نمونه‌های آن\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(t_continuous, continuous_signal(t_continuous), label='Continuous Signal')\n",
        "plt.stem(t_samples, x_samples, basefmt=\" \", linefmt='r-', markerfmt='ro', label='Samples')\n",
        "plt.xlabel('Time (s)')\n",
        "plt.ylabel('Amplitude')\n",
        "plt.title('Signal Sampling')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "```\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 110
        },
        "id": "kX3u90fEQluh",
        "outputId": "9ef2591d-0c94-481e-d4e6-6b7080f6c6e0"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "invalid syntax (<ipython-input-2-0ebd140e12fa>, line 1)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-0ebd140e12fa>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    ```python\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# مقدمه‌ای بر نمونه‌برداری\n",
        "\n",
        "نمونه‌برداری یکی از مهم‌ترین مراحل در پردازش سیگنال است که طی آن یک سیگنال پیوسته (آنالوگ) به یک دنباله گسسته از مقادیر تبدیل می‌شود. هدف اصلی این فرآیند، آماده‌سازی سیگنال برای پردازش دیجیتال است. از آنجایی که سیستم‌های دیجیتال فقط قادر به پردازش داده‌های گسسته هستند، نمونه‌برداری اولین گام در دیجیتالی کردن سیگنال‌ها به شمار می‌رود.\n",
        "\n",
        "## تعریف نمونه‌برداری\n",
        "\n",
        "در نمونه‌برداری، سیگنال پیوسته $x(t)$ در فواصل زمانی منظم $T_s$ (پریود نمونه‌برداری) نمونه‌برداری می‌شود و نتیجه یک دنباله گسسته $x[n]$ خواهد بود. این دنباله به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "x[n] = x(nT_s), \\quad n \\in \\mathbb{Z}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $T_s$ فاصله زمانی بین دو نمونه متوالی (پریود نمونه‌برداری) است.\n",
        "- $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است که به واحد هرتز (Hz) بیان می‌شود و نشان‌دهنده تعداد نمونه‌هایی است که در هر ثانیه گرفته می‌شود.\n",
        "\n",
        "## هدف از نمونه‌برداری\n",
        "\n",
        "هدف نمونه‌برداری این است که اطلاعات موجود در سیگنال پیوسته به‌طور کامل حفظ شود، به گونه‌ای که بتوان از دنباله گسسته نمونه‌ها، سیگنال اولیه را با دقت کامل بازسازی کرد. اگر فرکانس نمونه‌برداری به اندازه کافی بالا باشد، بازسازی دقیق سیگنال امکان‌پذیر است.\n",
        "\n",
        "## نمونه‌برداری ایده‌آل از سیگنال‌های پیوسته\n",
        "\n",
        "نمونه‌برداری ایده‌آل به حالتی گفته می‌شود که سیگنال پیوسته $x(t)$ دقیقاً در فواصل زمانی $T_s$ توسط ضرب آن با قطار پالس‌های ضربه‌ای دیراک $\\delta(t)$ نمونه‌برداری شود. قطار پالس ضربه‌ای به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "\\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "در نتیجه، سیگنال نمونه‌برداری‌شده $x_s(t)$ به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x_s(t) = x(t) \\cdot \\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} x(nT_s) \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "این مدل نشان می‌دهد که سیگنال نمونه‌برداری‌شده فقط در زمان‌های گسسته $t = nT_s$ مقادیر غیر صفر دارد و در سایر زمان‌ها صفر است.\n",
        "\n",
        "### طیف سیگنال نمونه‌برداری‌شده\n",
        "\n",
        "طیف سیگنال نمونه‌برداری‌شده $X_s(f)$ از طریق تبدیل فوریه به دست می‌آید. اگر سیگنال پیوسته $x(t)$ تبدیل فوریه $X(f)$ داشته باشد، طیف سیگنال نمونه‌برداری‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "X_s(f) = \\frac{1}{T_s} \\sum_{k=-\\infty}^{\\infty} X\\left(f - k f_s\\right)\n",
        "$$\n",
        "\n",
        "که در آن $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است. همان‌طور که مشاهده می‌شود، طیف سیگنال نمونه‌برداری‌شده شامل کپی‌هایی از طیف سیگنال اصلی است که در فواصل مضرب‌های صحیح $f_s$ تکرار می‌شوند.\n",
        "\n",
        "### شرط بازسازی بدون اعوجاج\n",
        "\n",
        "برای اینکه بتوان سیگنال اولیه را بدون اعوجاج از سیگنال نمونه‌برداری‌شده بازسازی کرد، لازم است که کپی‌های طیف اصلی با یکدیگر تداخل نداشته باشند. این شرط زمانی برقرار است که:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "که در آن $f_{\\text{max}}$ بیشینه فرکانس سیگنال پیوسته $x(t)$ است. این مقدار به عنوان **فرکانس نایکوییست** شناخته می‌شود. اگر این شرط برقرار نباشد، پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث هم‌پوشانی کپی‌های طیف و در نتیجه از بین رفتن اطلاعات سیگنال می‌شود.\n",
        "\n",
        "### بازسازی سیگنال از نمونه‌ها\n",
        "\n",
        "برای بازسازی سیگنال پیوسته از دنباله گسسته نمونه‌ها، از یک **فیلتر پایین‌گذر ایده‌آل** با عرض باند $f_{\\text{max}}$ استفاده می‌شود. سیگنال بازسازی‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x(t) = \\sum_{n=-\\infty}^{\\infty} x[n] \\text{sinc}\\left(\\frac{t - nT_s}{T_s}\\right)\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $\\text{sinc}(x) = \\frac{\\sin(\\pi x)}{\\pi x}$ تابع sinc است.\n",
        "- $T_s$ پریود نمونه‌برداری است.\n"
      ],
      "metadata": {
        "id": "Iown9L__QnFL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال پیوسته\n",
        "def continuous_signal(t):\n",
        "    return np.sin(2 * np.pi * 5 * t)  # سیگنال سینوسی با فرکانس 5 هرتز\n",
        "\n",
        "# پارامترهای نمونه‌برداری\n",
        "fs = 20  # فرکانس نمونه‌برداری (باید بزرگ‌تر از 2*f_max باشد)\n",
        "Ts = 1 / fs  # پریود نمونه‌برداری\n",
        "t_continuous = np.linspace(0, 1, 1000)  # زمان پیوسته برای نمایش سیگنال\n",
        "t_samples = np.arange(0, 1, Ts)  # زمان نمونه‌ها\n",
        "x_samples = continuous_signal(t_samples)  # نمونه‌های سیگنال\n",
        "\n",
        "# رسم سیگنال پیوسته و نمونه‌های آن\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(t_continuous, continuous_signal(t_continuous), label='Continuous Signal')\n",
        "plt.stem(t_samples, x_samples, basefmt=\" \", linefmt='r-', markerfmt='ro', label='Samples')\n",
        "plt.xlabel('Time (s)')\n",
        "plt.ylabel('Amplitude')\n",
        "plt.title('Signal Sampling')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "```"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 110
        },
        "id": "bpBlyZtSRVga",
        "outputId": "2e95c6fd-0607-488d-e1d9-bd76afc5db92"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "invalid syntax (<ipython-input-1-0ebd140e12fa>, line 1)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-0ebd140e12fa>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    ```python\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# مقدمه‌ای بر نمونه‌برداری\n",
        "\n",
        "نمونه‌برداری یکی از مهم‌ترین مراحل در پردازش سیگنال است که طی آن یک سیگنال پیوسته (آنالوگ) به یک دنباله گسسته از مقادیر تبدیل می‌شود. هدف اصلی این فرآیند، آماده‌سازی سیگنال برای پردازش دیجیتال است. از آنجایی که سیستم‌های دیجیتال فقط قادر به پردازش داده‌های گسسته هستند، نمونه‌برداری اولین گام در دیجیتالی کردن سیگنال‌ها به شمار می‌رود.\n",
        "\n",
        "## تعریف نمونه‌برداری\n",
        "\n",
        "در نمونه‌برداری، سیگنال پیوسته $x(t)$ در فواصل زمانی منظم $T_s$ (پریود نمونه‌برداری) نمونه‌برداری می‌شود و نتیجه یک دنباله گسسته $x[n]$ خواهد بود. این دنباله به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "x[n] = x(nT_s), \\quad n \\in \\mathbb{Z}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $T_s$ فاصله زمانی بین دو نمونه متوالی (پریود نمونه‌برداری) است.\n",
        "- $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است که به واحد هرتز (Hz) بیان می‌شود و نشان‌دهنده تعداد نمونه‌هایی است که در هر ثانیه گرفته می‌شود.\n",
        "\n",
        "## هدف از نمونه‌برداری\n",
        "\n",
        "هدف نمونه‌برداری این است که اطلاعات موجود در سیگنال پیوسته به‌طور کامل حفظ شود، به گونه‌ای که بتوان از دنباله گسسته نمونه‌ها، سیگنال اولیه را با دقت کامل بازسازی کرد. اگر فرکانس نمونه‌برداری به اندازه کافی بالا باشد، بازسازی دقیق سیگنال امکان‌پذیر است.\n",
        "\n",
        "## نمونه‌برداری ایده‌آل از سیگنال‌های پیوسته\n",
        "\n",
        "نمونه‌برداری ایده‌آل به حالتی گفته می‌شود که سیگنال پیوسته $x(t)$ دقیقاً در فواصل زمانی $T_s$ توسط ضرب آن با قطار پالس‌های ضربه‌ای دیراک $\\delta(t)$ نمونه‌برداری شود. قطار پالس ضربه‌ای به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "\\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "در نتیجه، سیگنال نمونه‌برداری‌شده $x_s(t)$ به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x_s(t) = x(t) \\cdot \\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} x(nT_s) \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "این مدل نشان می‌دهد که سیگنال نمونه‌برداری‌شده فقط در زمان‌های گسسته $t = nT_s$ مقادیر غیر صفر دارد و در سایر زمان‌ها صفر است.\n",
        "\n",
        "### طیف سیگنال نمونه‌برداری‌شده\n",
        "\n",
        "طیف سیگنال نمونه‌برداری‌شده $X_s(f)$ از طریق تبدیل فوریه به دست می‌آید. اگر سیگنال پیوسته $x(t)$ تبدیل فوریه $X(f)$ داشته باشد، طیف سیگنال نمونه‌برداری‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "X_s(f) = \\frac{1}{T_s} \\sum_{k=-\\infty}^{\\infty} X\\left(f - k f_s\\right)\n",
        "$$\n",
        "\n",
        "که در آن $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است. همان‌طور که مشاهده می‌شود، طیف سیگنال نمونه‌برداری‌شده شامل کپی‌هایی از طیف سیگنال اصلی است که در فواصل مضرب‌های صحیح $f_s$ تکرار می‌شوند.\n",
        "\n",
        "### شرط بازسازی بدون اعوجاج\n",
        "\n",
        "برای اینکه بتوان سیگنال اولیه را بدون اعوجاج از سیگنال نمونه‌برداری‌شده بازسازی کرد، لازم است که کپی‌های طیف اصلی با یکدیگر تداخل نداشته باشند. این شرط زمانی برقرار است که:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "که در آن $f_{\\text{max}}$ بیشینه فرکانس سیگنال پیوسته $x(t)$ است. این مقدار به عنوان **فرکانس نایکوییست** شناخته می‌شود. اگر این شرط برقرار نباشد، پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث هم‌پوشانی کپی‌های طیف و در نتیجه از بین رفتن اطلاعات سیگنال می‌شود.\n",
        "\n",
        "### بازسازی سیگنال از نمونه‌ها\n",
        "\n",
        "برای بازسازی سیگنال پیوسته از دنباله گسسته نمونه‌ها، از یک **فیلتر پایین‌گذر ایده‌آل** با عرض باند $f_{\\text{max}}$ استفاده می‌شود. سیگنال بازسازی‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x(t) = \\sum_{n=-\\infty}^{\\infty} x[n] \\text{sinc}\\left(\\frac{t - nT_s}{T_s}\\right)\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $\\text{sinc}(x) = \\frac{\\sin(\\pi x)}{\\pi x}$ تابع sinc است.\n",
        "- $T_s$ پریود نمونه‌برداری است.\n",
        "\n",
        "### بازسازی سیگنال پیوسته از سیگنال نمونه‌برداری شده\n",
        "\n",
        "بازسازی سیگنال پیوسته از سیگنال نمونه‌برداری شده به کمک فیلتر پایین‌گذر ایده‌آل انجام می‌شود. این فیلتر وظیفه حذف مؤلفه‌های فرکانسی اضافی که در طیف نمونه‌برداری ظاهر شده‌اند را بر عهده دارد. روش بازسازی به شرح زیر است:\n",
        "\n",
        "1. سیگنال نمونه‌برداری شده $x[n]$ به عنوان ورودی در نظر گرفته می‌شود.\n",
        "2. هر نمونه $x[n]$ با تابع sinc مقیاس‌گذاری و شیفت داده می‌شود.\n",
        "3. مجموع این توابع شیفت داده شده، سیگنال پیوسته بازسازی‌شده را تشکیل می‌دهد.\n",
        "\n",
        "معادله بازسازی به صورت زیر است:\n",
        "\n",
        "$$\n",
        "x(t) = \\sum_{n=-\\infty}^{\\infty} x[n] \\text{sinc}\\left(\\frac{t - nT_s}{T_s}\\right)\n",
        "$$"
      ],
      "metadata": {
        "id": "qDATOxLRR-Xs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "### کد پایتون برای بازسازی سیگنال\n",
        "\n",
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال پیوسته\n",
        "def continuous_signal(t):\n",
        "    return np.sin(2 * np.pi * 5 * t)  # سیگنال سینوسی با فرکانس 5 هرتز\n",
        "\n",
        "# تابع بازسازی با استفاده از sinc\n",
        "def reconstruct_signal(samples, Ts, t):\n",
        "    reconstructed = np.zeros_like(t)\n",
        "    for n, sample in enumerate(samples):\n",
        "        reconstructed += sample * np.sinc((t - n * Ts) / Ts)\n",
        "    return reconstructed\n",
        "\n",
        "# پارامترهای نمونه‌برداری\n",
        "fs = 20  # فرکانس نمونه‌برداری\n",
        "Ts = 1 / fs  # پریود نمونه‌برداری\n",
        "t_samples = np.arange(0, 1, Ts)  # زمان نمونه‌ها\n",
        "x_samples = continuous_signal(t_samples)  # نمونه‌های سیگنال\n",
        "\n",
        "t_continuous = np.linspace(0, 1, 1000)  # زمان پیوسته برای نمایش سیگنال بازسازی‌شده\n",
        "x_reconstructed = reconstruct_signal(x_samples, Ts, t_continuous)\n",
        "\n",
        "# رسم سیگنال پیوسته، نمونه‌ها و سیگنال بازسازی‌شده\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(t_continuous, continuous_signal(t_continuous), 'g', label='Original Signal')\n",
        "plt.stem(t_samples, x_samples, basefmt=\" \", linefmt='r-', markerfmt='ro', label='Samples')\n",
        "plt.plot(t_continuous, x_reconstructed, 'b--', label='Reconstructed Signal')\n",
        "plt.xlabel('Time (s)')\n",
        "plt.ylabel('Amplitude')\n",
        "plt.title('Signal Reconstruction from Samples')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "```\n"
      ],
      "metadata": {
        "id": "u35iihVYSE1S"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# مقدمه‌ای بر نمونه‌برداری\n",
        "\n",
        "نمونه‌برداری یکی از مهم‌ترین مراحل در پردازش سیگنال است که طی آن یک سیگنال پیوسته (آنالوگ) به یک دنباله گسسته از مقادیر تبدیل می‌شود. هدف اصلی این فرآیند، آماده‌سازی سیگنال برای پردازش دیجیتال است. از آنجایی که سیستم‌های دیجیتال فقط قادر به پردازش داده‌های گسسته هستند، نمونه‌برداری اولین گام در دیجیتالی کردن سیگنال‌ها به شمار می‌رود.\n",
        "\n",
        "## تعریف نمونه‌برداری\n",
        "\n",
        "در نمونه‌برداری، سیگنال پیوسته $x(t)$ در فواصل زمانی منظم $T_s$ (پریود نمونه‌برداری) نمونه‌برداری می‌شود و نتیجه یک دنباله گسسته $x[n]$ خواهد بود. این دنباله به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "x[n] = x(nT_s), \\quad n \\in \\mathbb{Z}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $T_s$ فاصله زمانی بین دو نمونه متوالی (پریود نمونه‌برداری) است.\n",
        "- $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است که به واحد هرتز (Hz) بیان می‌شود و نشان‌دهنده تعداد نمونه‌هایی است که در هر ثانیه گرفته می‌شود.\n",
        "\n",
        "## هدف از نمونه‌برداری\n",
        "\n",
        "هدف نمونه‌برداری این است که اطلاعات موجود در سیگنال پیوسته به‌طور کامل حفظ شود، به گونه‌ای که بتوان از دنباله گسسته نمونه‌ها، سیگنال اولیه را با دقت کامل بازسازی کرد. اگر فرکانس نمونه‌برداری به اندازه کافی بالا باشد، بازسازی دقیق سیگنال امکان‌پذیر است.\n",
        "\n",
        "## نمونه‌برداری ایده‌آل از سیگنال‌های پیوسته\n",
        "\n",
        "نمونه‌برداری ایده‌آل به حالتی گفته می‌شود که سیگنال پیوسته $x(t)$ دقیقاً در فواصل زمانی $T_s$ توسط ضرب آن با قطار پالس‌های ضربه‌ای دیراک $\\delta(t)$ نمونه‌برداری شود. قطار پالس ضربه‌ای به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "\\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "در نتیجه، سیگنال نمونه‌برداری‌شده $x_s(t)$ به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x_s(t) = x(t) \\cdot \\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} x(nT_s) \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "این مدل نشان می‌دهد که سیگنال نمونه‌برداری‌شده فقط در زمان‌های گسسته $t = nT_s$ مقادیر غیر صفر دارد و در سایر زمان‌ها صفر است.\n",
        "\n",
        "### طیف سیگنال نمونه‌برداری‌شده\n",
        "\n",
        "طیف سیگنال نمونه‌برداری‌شده $X_s(f)$ از طریق تبدیل فوریه به دست می‌آید. اگر سیگنال پیوسته $x(t)$ تبدیل فوریه $X(f)$ داشته باشد، طیف سیگنال نمونه‌برداری‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "X_s(f) = \\frac{1}{T_s} \\sum_{k=-\\infty}^{\\infty} X\\left(f - k f_s\\right)\n",
        "$$\n",
        "\n",
        "که در آن $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است. همان‌طور که مشاهده می‌شود، طیف سیگنال نمونه‌برداری‌شده شامل کپی‌هایی از طیف سیگنال اصلی است که در فواصل مضرب‌های صحیح $f_s$ تکرار می‌شوند.\n",
        "\n",
        "### شرط بازسازی بدون اعوجاج\n",
        "\n",
        "برای اینکه بتوان سیگنال اولیه را بدون اعوجاج از سیگنال نمونه‌برداری‌شده بازسازی کرد، لازم است که کپی‌های طیف اصلی با یکدیگر تداخل نداشته باشند. این شرط زمانی برقرار است که:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "که در آن $f_{\\text{max}}$ بیشینه فرکانس سیگنال پیوسته $x(t)$ است. این مقدار به عنوان **فرکانس نایکوییست** شناخته می‌شود. اگر این شرط برقرار نباشد، پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث هم‌پوشانی کپی‌های طیف و در نتیجه از بین رفتن اطلاعات سیگنال می‌شود.\n",
        "\n",
        "## اثرات زیر نمونه‌برداری و پدیده Aliasing\n",
        "\n",
        "### تعریف Aliasing\n",
        "\n",
        "پدیده Aliasing زمانی رخ می‌دهد که فرکانس نمونه‌برداری کمتر از دو برابر بیشینه فرکانس سیگنال ($2f_{\\text{max}}$) باشد. در این حالت، کپی‌های طیف سیگنال اصلی با یکدیگر هم‌پوشانی پیدا می‌کنند و در نتیجه، سیگنال بازسازی‌شده با سیگنال اصلی متفاوت خواهد بود. این پدیده باعث اعوجاج و از دست رفتن اطلاعات سیگنال می‌شود.\n",
        "\n",
        "### تفسیر فرکانسی پدیده Aliasing\n",
        "\n",
        "هنگام نمونه‌برداری سیگنال، طیف آن در فواصل $f_s$ تکرار می‌شود. اگر فرکانس نمونه‌برداری به اندازه کافی بزرگ نباشد، این کپی‌ها با هم هم‌پوشانی خواهند داشت. این موضوع را می‌توان به صورت زیر مشاهده کرد:\n",
        "\n",
        "- اگر $f_s \\geq 2f_{\\text{max}}$ باشد، طیف سیگنال‌های کپی‌شده از هم جدا باقی می‌مانند و می‌توان سیگنال را به درستی بازسازی کرد.\n",
        "- اگر $f_s < 2f_{\\text{max}}$ باشد، طیف‌ها روی هم می‌افتند و بازسازی بدون اعوجاج ممکن نخواهد بود.\n",
        "\n",
        "### اثرات Aliasing در حوزه زمان\n",
        "\n",
        "پدیده Aliasing در حوزه زمان به صورت تحریف سیگنال بازسازی‌شده ظاهر می‌شود. به عبارت دیگر، سیگنال بازسازی‌شده به دلیل تداخل کپی‌های طیف، شکل اصلی خود را از دست می‌دهد و اطلاعات آن ناقص می‌شود.\n",
        "\n",
        "### جلوگیری از Aliasing"
      ],
      "metadata": {
        "id": "68iz_IcDSJDa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال پیوسته با فرکانس بالا\n",
        "def high_freq_signal(t):\n",
        "    return np.sin(2 * np.pi * 10 * t)  # سیگنال سینوسی با فرکانس 10 هرتز\n",
        "\n",
        "# پارامترهای نمونه‌برداری\n",
        "fs_aliasing = 15  # فرکانس نمونه‌برداری کمتر از 2 برابر فرکانس سیگنال\n",
        "Ts_aliasing = 1 / fs_aliasing  # پریود نمونه‌برداری\n",
        "\n",
        "t_samples_aliasing = np.arange(0, 1, Ts_aliasing)  # زمان نمونه‌ها\n",
        "x_samples_aliasing = high_freq_signal(t_samples_aliasing)  # نمونه‌های سیگنال\n",
        "\n",
        "t_continuous = np.linspace(0, 1, 1000)  # زمان پیوسته برای نمایش سیگنال\n",
        "\n",
        "# رسم سیگنال پیوسته و نمونه‌ها\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(t_continuous, high_freq_signal(t_continuous), 'g', label='Original Signal')\n",
        "plt.stem(t_samples_aliasing, x_samples_aliasing, basefmt=\" \", linefmt='r-', markerfmt='ro', label='Samples (Aliased)')\n",
        "plt.xlabel('Time (s)')\n",
        "plt.ylabel('Amplitude')\n",
        "plt.title('Aliasing Effect due to Undersampling')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "```"
      ],
      "metadata": {
        "id": "1nyuLZdASlkf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# مقدمه‌ای بر نمونه‌برداری\n",
        "\n",
        "نمونه‌برداری یکی از مهم‌ترین مراحل در پردازش سیگنال است که طی آن یک سیگنال پیوسته (آنالوگ) به یک دنباله گسسته از مقادیر تبدیل می‌شود. هدف اصلی این فرآیند، آماده‌سازی سیگنال برای پردازش دیجیتال است. از آنجایی که سیستم‌های دیجیتال فقط قادر به پردازش داده‌های گسسته هستند، نمونه‌برداری اولین گام در دیجیتالی کردن سیگنال‌ها به شمار می‌رود.\n",
        "\n",
        "## تعریف نمونه‌برداری\n",
        "\n",
        "در نمونه‌برداری، سیگنال پیوسته $x(t)$ در فواصل زمانی منظم $T_s$ (پریود نمونه‌برداری) نمونه‌برداری می‌شود و نتیجه یک دنباله گسسته $x[n]$ خواهد بود. این دنباله به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "x[n] = x(nT_s), \\quad n \\in \\mathbb{Z}\n",
        "$$\n",
        "\n",
        "که در آن:\n",
        "\n",
        "- $T_s$ فاصله زمانی بین دو نمونه متوالی (پریود نمونه‌برداری) است.\n",
        "- $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است که به واحد هرتز (Hz) بیان می‌شود و نشان‌دهنده تعداد نمونه‌هایی است که در هر ثانیه گرفته می‌شود.\n",
        "\n",
        "## هدف از نمونه‌برداری\n",
        "\n",
        "هدف نمونه‌برداری این است که اطلاعات موجود در سیگنال پیوسته به‌طور کامل حفظ شود، به گونه‌ای که بتوان از دنباله گسسته نمونه‌ها، سیگنال اولیه را با دقت کامل بازسازی کرد. اگر فرکانس نمونه‌برداری به اندازه کافی بالا باشد، بازسازی دقیق سیگنال امکان‌پذیر است.\n",
        "\n",
        "## نمونه‌برداری ایده‌آل از سیگنال‌های پیوسته\n",
        "\n",
        "نمونه‌برداری ایده‌آل به حالتی گفته می‌شود که سیگنال پیوسته $x(t)$ دقیقاً در فواصل زمانی $T_s$ توسط ضرب آن با قطار پالس‌های ضربه‌ای دیراک $\\delta(t)$ نمونه‌برداری شود. قطار پالس ضربه‌ای به صورت زیر تعریف می‌شود:\n",
        "\n",
        "$$\n",
        "\\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "در نتیجه، سیگنال نمونه‌برداری‌شده $x_s(t)$ به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "x_s(t) = x(t) \\cdot \\delta_s(t) = \\sum_{n=-\\infty}^{\\infty} x(nT_s) \\delta(t - nT_s)\n",
        "$$\n",
        "\n",
        "این مدل نشان می‌دهد که سیگنال نمونه‌برداری‌شده فقط در زمان‌های گسسته $t = nT_s$ مقادیر غیر صفر دارد و در سایر زمان‌ها صفر است.\n",
        "\n",
        "### طیف سیگنال نمونه‌برداری‌شده\n",
        "\n",
        "طیف سیگنال نمونه‌برداری‌شده $X_s(f)$ از طریق تبدیل فوریه به دست می‌آید. اگر سیگنال پیوسته $x(t)$ تبدیل فوریه $X(f)$ داشته باشد، طیف سیگنال نمونه‌برداری‌شده به صورت زیر خواهد بود:\n",
        "\n",
        "$$\n",
        "X_s(f) = \\frac{1}{T_s} \\sum_{k=-\\infty}^{\\infty} X\\left(f - k f_s\\right)\n",
        "$$\n",
        "\n",
        "که در آن $f_s = \\frac{1}{T_s}$ فرکانس نمونه‌برداری است. همان‌طور که مشاهده می‌شود، طیف سیگنال نمونه‌برداری‌شده شامل کپی‌هایی از طیف سیگنال اصلی است که در فواصل مضرب‌های صحیح $f_s$ تکرار می‌شوند.\n",
        "\n",
        "### شرط بازسازی بدون اعوجاج\n",
        "\n",
        "برای اینکه بتوان سیگنال اولیه را بدون اعوجاج از سیگنال نمونه‌برداری‌شده بازسازی کرد، لازم است که کپی‌های طیف اصلی با یکدیگر تداخل نداشته باشند. این شرط زمانی برقرار است که:\n",
        "\n",
        "$$\n",
        "f_s \\geq 2 f_{\\text{max}}\n",
        "$$\n",
        "\n",
        "که در آن $f_{\\text{max}}$ بیشینه فرکانس سیگنال پیوسته $x(t)$ است. این مقدار به عنوان **فرکانس نایکوییست** شناخته می‌شود. اگر این شرط برقرار نباشد، پدیده‌ای به نام **Aliasing** رخ می‌دهد که باعث هم‌پوشانی کپی‌های طیف و در نتیجه از بین رفتن اطلاعات سیگنال می‌شود.\n",
        "\n",
        "## اثرات زیر نمونه‌برداری و پدیده Aliasing\n",
        "\n",
        "### تعریف Aliasing\n",
        "\n",
        "پدیده Aliasing زمانی رخ می‌دهد که فرکانس نمونه‌برداری کمتر از دو برابر بیشینه فرکانس سیگنال ($2f_{\\text{max}}$) باشد. در این حالت، کپی‌های طیف سیگنال اصلی با یکدیگر هم‌پوشانی پیدا می‌کنند و در نتیجه، سیگنال بازسازی‌شده با سیگنال اصلی متفاوت خواهد بود. این پدیده باعث اعوجاج و از دست رفتن اطلاعات سیگنال می‌شود.\n",
        "\n",
        "### تفسیر فرکانسی پدیده Aliasing\n",
        "\n",
        "هنگام نمونه‌برداری سیگنال، طیف آن در فواصل $f_s$ تکرار می‌شود. اگر فرکانس نمونه‌برداری به اندازه کافی بزرگ نباشد، این کپی‌ها با هم هم‌پوشانی خواهند داشت. این موضوع را می‌توان به صورت زیر مشاهده کرد:\n",
        "\n",
        "- اگر $f_s \\geq 2f_{\\text{max}}$ باشد، طیف سیگنال‌های کپی‌شده از هم جدا باقی می‌مانند و می‌توان سیگنال را به درستی بازسازی کرد.\n",
        "- اگر $f_s < 2f_{\\text{max}}$ باشد، طیف‌ها روی هم می‌افتند و بازسازی بدون اعوجاج ممکن نخواهد بود.\n",
        "\n",
        "### اثرات Aliasing در حوزه زمان\n",
        "\n",
        "پدیده Aliasing در حوزه زمان به صورت تحریف سیگنال بازسازی‌شده ظاهر می‌شود. به عبارت دیگر، سیگنال بازسازی‌شده به دلیل تداخل کپی‌های طیف، شکل اصلی خود را از دست می‌دهد و اطلاعات آن ناقص می‌شود.\n",
        "\n",
        "### جلوگیری از Aliasing\n",
        "\n",
        "برای جلوگیری از وقوع Aliasing، دو روش اصلی وجود دارد:\n",
        "\n",
        "1. **افزایش فرکانس نمونه‌برداری:** اطمینان از اینکه $f_s \\geq 2f_{\\text{max}}$ باشد.\n",
        "2. **استفاده از فیلتر پایین‌گذر قبل از نمونه‌برداری:** این فیلتر که به عنوان **فیلتر ضد Aliasing** شناخته می‌شود، فرکانس‌های بالاتر از $f_{\\text{max}}$ را حذف می‌کند تا از وقوع Aliasing جلوگیری شود.\n",
        "\n",
        "### کد پایتون برای نمایش اثرات Aliasing\n"
      ],
      "metadata": {
        "id": "h14IRxqrSpbQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# تعریف سیگنال پیوسته با فرکانس بالا\n",
        "def high_freq_signal(t):\n",
        "    return np.sin(2 * np.pi * 10 * t)  # سیگنال سینوسی با فرکانس 10 هرتز\n",
        "\n",
        "# پارامترهای نمونه‌برداری\n",
        "fs_aliasing = 15  # فرکانس نمونه‌برداری کمتر از 2 برابر فرکانس سیگنال\n",
        "Ts_aliasing = 1 / fs_aliasing  # پریود نمونه‌برداری\n",
        "\n",
        "t_samples_aliasing = np.arange(0, 1, Ts_aliasing)  # زمان نمونه‌ها\n",
        "x_samples_aliasing = high_freq_signal(t_samples_aliasing)  # نمونه‌های سیگنال\n",
        "\n",
        "t_continuous = np.linspace(0, 1, 1000)  # زمان پیوسته برای نمایش سیگنال\n",
        "\n",
        "# رسم سیگنال پیوسته و نمونه‌ها\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(t_continuous, high_freq_signal(t_continuous), 'g', label='Original Signal')\n",
        "plt.stem(t_samples_aliasing, x_samples_aliasing, basefmt=\" \", linefmt='r-', markerfmt='ro', label='Samples (Aliased)')\n",
        "plt.xlabel('Time (s)')\n",
        "plt.ylabel('Amplitude')\n",
        "plt.title('Aliasing Effect due to Undersampling')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "```"
      ],
      "metadata": {
        "id": "m2QFaq6vTEJ8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# نمونه‌برداری از سیگنال‌های چندکاناله\n",
        "\n",
        "## مقدمه\n",
        "\n",
        "در پردازش سیگنال‌های چندکاناله، سیگنال‌ها به طور همزمان از چندین منبع یا حسگر دریافت می‌شوند. این سیگنال‌ها ممکن است از کانال‌های مختلف در یک سیستم ضبط داده (مانند میکروفن‌ها یا دوربین‌های چندگانه) یا از منابع مختلف مانند چندین حسگر اندازه‌گیری باشند. نمونه‌برداری از این سیگنال‌ها به معنای تبدیل سیگنال‌های آنالوگ به سیگنال‌های دیجیتال در زمان‌های گسسته است.\n",
        "\n",
        "### سیستم‌های چندکاناله\n",
        "\n",
        "یک سیستم چندکاناله معمولاً سیگنال‌هایی را از چندین ورودی دریافت می‌کند. این ورودی‌ها می‌توانند به طور همزمان نمونه‌برداری شده و سپس به سیگنال‌های دیجیتال تبدیل شوند. هر کانال به صورت مستقل ممکن است سیگنال آنالوگ خود را داشته باشد و تبدیل آن به دیجیتال نیازمند یک **نمونه‌بردار** برای هر کانال است.\n",
        "\n",
        "### مراحل نمونه‌برداری از سیگنال‌های چندکاناله\n",
        "\n",
        "1. **جمع‌آوری سیگنال‌های آنالوگ**:\n",
        "   - سیگنال‌های آنالوگ از چندین منبع مختلف دریافت می‌شوند.\n",
        "   - این سیگنال‌ها ممکن است به صورت پیوسته در زمان وجود داشته باشند.\n",
        "\n",
        "2. **نمونه‌برداری (Sampling)**:\n",
        "   - برای هر کانال، سیگنال آنالوگ در فواصل زمانی مشخص (با فرکانس نمونه‌برداری $f_s$) نمونه‌برداری می‌شود.\n",
        "   - سیگنال‌های نمونه‌برداری شده به یک دنباله از مقادیر دیجیتال تبدیل می‌شوند. این کار معمولاً توسط **مبدل آنالوگ به دیجیتال (ADC)** انجام می‌شود.\n",
        "   \n",
        "3. **کنترل زمان‌بندی نمونه‌برداری**:\n",
        "   - برای جلوگیری از مشکلاتی مانند تداخل یا اختلال بین کانال‌ها، زمان‌بندی نمونه‌برداری برای تمام کانال‌ها باید به صورت همزمان یا هماهنگ انجام شود.\n",
        "   - این مسئله به ویژه در سیستم‌های زمان حساس مانند پردازش سیگنال‌های صوتی و تصویری مهم است.\n",
        "\n",
        "4. **کمی‌سازی (Quantization)**:\n",
        "   - بعد از نمونه‌برداری، هر نمونه باید به یک مقدار عددی دیجیتال کمی‌سازی شود. این مقدار بسته به دقت مبدل آنالوگ به دیجیتال (ADC) ممکن است محدود به تعداد مشخصی از بیت‌ها باشد.\n",
        "   \n",
        "5. **ادغام داده‌های چندکاناله**:\n",
        "   - پس از نمونه‌برداری و کمی‌سازی، داده‌های هر کانال به صورت مستقل به یک فرمت دیجیتال تبدیل می‌شوند. گاهی اوقات این داده‌ها باید به یکدیگر ادغام شوند تا پردازش‌های بیشتر یا تجزیه‌وتحلیل مشترک روی داده‌های چندکاناله انجام گیرد.\n",
        "\n",
        "## چالش‌ها و ملاحظات\n",
        "\n",
        "- **هماهنگی زمانی**: یکی از چالش‌های مهم در نمونه‌برداری از سیگنال‌های چندکاناله، هماهنگ‌سازی زمان‌بندی نمونه‌برداری بین کانال‌ها است. این مسئله به ویژه در سیستم‌های با حساسیت زمانی بالا بسیار حائز اهمیت است.\n",
        "  \n",
        "- **پهنای باند و ظرفیت داده**: نمونه‌برداری از چندین کانال به طور همزمان ممکن است نیاز به پهنای باند بالایی داشته باشد. باید از فناوری‌هایی استفاده شود که توانایی انتقال حجم زیاد داده‌های دیجیتال را داشته باشند.\n",
        "\n",
        "- **پردازش موازی**: در پردازش سیگنال‌های چندکاناله، معمولاً از پردازش موازی استفاده می‌شود تا سیگنال‌ها به صورت همزمان تحلیل شوند.\n",
        "\n",
        "## کاربردها\n",
        "\n",
        "- **پردازش صوتی چندکاناله**: در ضبط و پردازش صداهای محیطی از چندین میکروفن به طور همزمان استفاده می‌شود.\n",
        "- **پردازش تصویری و ویدیویی چندکاناله**: در دوربین‌های ویدیویی چندگانه یا حسگرهای تصویری، نمونه‌برداری از داده‌های تصویری از چندین کانال انجام می‌شود.\n",
        "- **سیستم‌های نظارتی**: در سیستم‌های نظارتی از حسگرهای متعدد برای شبیه‌سازی محیط‌های مختلف و جمع‌آوری داده‌ها به صورت چندکاناله استفاده می‌شود.\n",
        "\n",
        "## نتیجه‌گیری\n",
        "\n",
        "نمونه‌برداری از سیگنال‌های چندکاناله یکی از مفاهیم اساسی در پردازش سیگنال است که نیاز به دقت بالا در همگام‌سازی و پردازش دارد. این تکنیک به طور گسترده‌ای در کاربردهایی مانند پردازش صوتی، تصویری، و سیگنال‌های سنجش از راه دور استفاده می‌شود.\n"
      ],
      "metadata": {
        "id": "NCl-M_6qTQ_9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\\begin{lstlisting}[language=Python]\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# پارامترها\n",
        "fs = 1000  # فرکانس نمونه‌برداری (Hz)\n",
        "t = np.linspace(0, 1, fs)  # زمان نمونه‌برداری\n",
        "f1 = 50  # فرکانس سیگنال اول (Hz)\n",
        "f2 = 120  # فرکانس سیگنال دوم (Hz)\n",
        "\n",
        "# سیگنال‌های آنالوگ\n",
        "signal1 = np.sin(2 * np.pi * f1 * t)\n",
        "signal2 = np.sin(2 * np.pi * f2 * t)\n",
        "\n",
        "# افزودن نویز به سیگنال‌ها\n",
        "noise = np.random.normal(0, 0.1, t.shape)\n",
        "signal1_noisy = signal1 + noise\n",
        "signal2_noisy = signal2 + noise\n",
        "\n",
        "# رسم سیگنال‌ها\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "plt.subplot(2, 1, 1)\n",
        "plt.plot(t, signal1_noisy, label=\"Signal 1 (Noisy)\")\n",
        "plt.plot(t, signal1, label=\"Signal 1 (Original)\", linestyle='--')\n",
        "plt.title(\"Signal 1 - Noisy vs Original\")\n",
        "plt.xlabel(\"Time [s]\")\n",
        "plt.ylabel(\"Amplitude\")\n",
        "plt.legend()\n",
        "\n",
        "plt.subplot(2, 1, 2)\n",
        "plt.plot(t, signal2_noisy, label=\"Signal 2 (Noisy)\")\n",
        "plt.plot(t, signal2, label=\"Signal 2 (Original)\", linestyle='--')\n",
        "plt.title(\"Signal 2 - Noisy vs Original\")\n",
        "plt.xlabel(\"Time [s]\")\n",
        "plt.ylabel(\"Amplitude\")\n",
        "plt.legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\\end{lstlisting}\n"
      ],
      "metadata": {
        "id": "3iaYHaWeViEr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# سیگنال‌های باندپایه و نمونه‌برداری آن‌ها\n",
        "\n",
        "## مقدمه\n",
        "\n",
        "یک **سیگنال باندپایه** به سیگنالی گفته می‌شود که تنها در یک بازه خاص از فرکانس‌ها وجود داشته باشد. به عبارت دیگر، سیگنال باندپایه فرکانس‌های بالای صفر را داراست، اما به طور متمرکز در یک باند خاص فرکانسی قرار می‌گیرد و خارج از این باند، فرکانس‌های زیادی ندارد.\n",
        "\n",
        "### ویژگی‌های سیگنال باندپایه:\n",
        "- سیگنال‌های باندپایه معمولاً در محدوده‌ای خاص از فرکانس‌ها (مثلاً فرکانس‌های بین $f_1$ و $f_2$) وجود دارند.\n",
        "- این سیگنال‌ها برای انتقال اطلاعات در سیستم‌های مخابراتی و سیگنال‌های رادیویی استفاده می‌شوند.\n",
        "- به طور معمول در سیگنال‌های صوتی یا ویدیویی نیز از سیگنال‌های باندپایه استفاده می‌شود.\n",
        "\n",
        "## نمونه‌برداری از سیگنال‌های باندپایه\n",
        "\n",
        "برای نمونه‌برداری یک سیگنال باندپایه، همانند سایر سیگنال‌ها باید از یک فرکانس نمونه‌برداری معین استفاده کرد. با این حال، در سیگنال‌های باندپایه توجه به ویژگی‌های زیر ضروری است:\n",
        "\n",
        "### قاعده نایکوئیست (Nyquist Criterion)\n",
        "\n",
        "طبق قاعده نایکوئیست، برای جلوگیری از **نقاط هم‌پوشانی** (Aliasing) هنگام نمونه‌برداری یک سیگنال باندپایه، باید فرکانس نمونه‌برداری حداقل دو برابر بالاترین فرکانس موجود در سیگنال باشد. به این ترتیب، اگر حداکثر فرکانس سیگنال باندپایه $f_{max}$ باشد، فرکانس نمونه‌برداری باید به صورت زیر انتخاب شود:\n",
        "\n",
        "\\[\n",
        "f_s \\geq 2 f_{max}\n",
        "\\]\n",
        "\n",
        "که در آن:\n",
        "- \\( f_s \\) فرکانس نمونه‌برداری است.\n",
        "- \\( f_{max} \\) بالاترین فرکانس موجود در سیگنال باندپایه است.\n",
        "\n",
        "اگر فرکانس نمونه‌برداری کمتر از حد نایکوئیست باشد، **پدیده علیاسینگ** (Aliasing) رخ می‌دهد که منجر به از دست رفتن اطلاعات و اشتباه در بازسازی سیگنال می‌شود.\n",
        "\n",
        "### مثال از سیگنال باندپایه و نمونه‌برداری آن\n",
        "\n",
        "سیگنال‌های باندپایه معمولاً در زمینه‌های مخابراتی مانند **سیگنال‌های رادیویی** یا **صوتی** استفاده می‌شوند. برای مثال، یک سیگنال صوتی با فرکانس‌های بین ۲۰ هرتز تا ۲۰ کیلوهرتز می‌تواند به عنوان یک سیگنال باندپایه در نظر گرفته شود. برای نمونه‌برداری این سیگنال، فرکانس نمونه‌برداری باید حداقل دو برابر بزرگتر از ۲۰ کیلوهرتز (که بالاترین فرکانس سیگنال است) باشد.\n",
        "\n",
        "### نحوه نمونه‌برداری\n",
        "\n",
        "برای نمونه‌برداری یک سیگنال باندپایه، سیگنال آنالوگ در زمان‌های گسسته به نمونه‌هایی با مقادیر دیجیتال تبدیل می‌شود. این کار معمولاً با استفاده از یک **مبدل آنالوگ به دیجیتال (ADC)** انجام می‌شود.\n",
        "\n",
        "در عمل، با توجه به پیشرفت فناوری‌های پردازش سیگنال دیجیتال، نمونه‌برداری از سیگنال‌های باندپایه به صورت کاملاً دیجیتال انجام می‌شود.\n",
        "\n",
        "### کد پایتون برای نمونه‌برداری سیگنال باندپایه\n",
        "\n",
        "در این مثال، یک سیگنال باندپایه با فرکانس‌های مختلف ایجاد شده و سپس نمونه‌برداری از آن با فرکانس‌های مختلف انجام می‌شود.\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "f1xAiJ3HWR1S"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "```python\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# پارامترهای سیگنال\n",
        "f1 = 50  # فرکانس سیگنال (Hz)\n",
        "f2 = 150  # بالاترین فرکانس سیگنال باندپایه (Hz)\n",
        "t_continuous = np.linspace(0, 1, 10000)  # زمان پیوسته\n",
        "signal_continuous = np.cos(2 * np.pi * f1 * t_continuous) + np.cos(2 * np.pi * f2 * t_continuous)\n",
        "\n",
        "# فرکانس نمونه‌برداری\n",
        "fs = 400  # فرکانس نمونه‌برداری (Hz)\n",
        "\n",
        "# زمان گسسته و سیگنال نمونه‌برداری شده\n",
        "t_discrete = np.arange(0, 1, 1/fs)\n",
        "signal_discrete = np.cos(2 * np.pi * f1 * t_discrete) + np.cos(2 * np.pi * f2 * t_discrete)\n",
        "\n",
        "# رسم سیگنال‌ها\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# سیگنال پیوسته\n",
        "plt.subplot(2, 1, 1)\n",
        "plt.plot(t_continuous, signal_continuous, label=\"Continuous Signal\", color='b')\n",
        "plt.title(\"Continuous Signal (Band-Pass)\")\n",
        "plt.xlabel(\"Time [s]\")\n",
        "plt.ylabel(\"Amplitude\")\n",
        "plt.legend()\n",
        "\n",
        "# سیگنال نمونه‌برداری شده\n",
        "plt.subplot(2, 1, 2)\n",
        "plt.stem(t_discrete, signal_discrete, label=\"Sampled Signal\", basefmt=\" \", linefmt=\"r-\", markerfmt=\"ro\")\n",
        "plt.title(\"Sampled Signal (Band-Pass)\")\n",
        "plt.xlabel(\"Time [s]\")\n",
        "plt.ylabel(\"Amplitude\")\n",
        "plt.legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "5ogMlxudWY2y"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# کاربردهای عملی نمونه‌برداری\n",
        "\n",
        "## مقدمه\n",
        "\n",
        "نمونه‌برداری فرآیند تبدیل سیگنال‌های آنالوگ به سیگنال‌های دیجیتال است. این فرآیند در بسیاری از زمینه‌ها و صنایع مختلف کاربرد دارد. نمونه‌برداری از اهمیت زیادی برخوردار است، زیرا به ما این امکان را می‌دهد که سیگنال‌های آنالوگ را به شکلی دیجیتال پردازش کنیم که برای ذخیره‌سازی، انتقال و تحلیل مناسب باشد.\n",
        "\n",
        "در اینجا برخی از کاربردهای عملی نمونه‌برداری در دنیای واقعی آورده شده است.\n",
        "\n",
        "## 1. پردازش صوتی\n",
        "\n",
        "### ضبط صدا\n",
        "در سیستم‌های ضبط صدا، سیگنال‌های آنالوگ صوتی (که از میکروفن‌ها دریافت می‌شود) باید نمونه‌برداری شده و به سیگنال دیجیتال تبدیل شوند تا امکان پردازش و ذخیره‌سازی آن‌ها در کامپیوتر یا دستگاه‌های دیجیتال فراهم شود. برای مثال:\n",
        "- **CD ها** و **MP3 ها** با استفاده از نمونه‌برداری از سیگنال‌های صوتی آنالوگ در فرکانس‌های بالای ۴۴ کیلوهرتز تولید می‌شوند.\n",
        "  \n",
        "### پردازش و تغییر صدا\n",
        "در زمینه پردازش صوتی، مانند **افکت‌های صوتی**، **کاهش نویز**، و **تشخیص صدا**، سیگنال‌های نمونه‌برداری شده به داده‌های دیجیتال تبدیل می‌شوند و سپس به صورت الگوریتمی پردازش می‌شوند.\n",
        "\n",
        "## 2. پردازش تصویری\n",
        "\n",
        "### فشرده‌سازی و ذخیره‌سازی تصاویر\n",
        "تصاویر آنالوگ باید برای فشرده‌سازی و ذخیره‌سازی در قالب‌های دیجیتال مانند **JPEG** یا **PNG** نمونه‌برداری شوند. در این فرآیند، هر پیکسل تصویر به یک مقدار عددی تبدیل می‌شود.\n",
        "- در سیستم‌های دوربین دیجیتال، سنسورهای تصویری با استفاده از نمونه‌برداری از نور منعطف، تصاویر دیجیتال تولید می‌کنند.\n",
        "\n",
        "### پردازش و تحلیل تصویر\n",
        "در کاربردهایی مانند **شناسایی چهره** یا **تشخیص اشیاء**، تصاویر نمونه‌برداری شده باید تحلیل شوند. این سیگنال‌ها به داده‌های دیجیتال تبدیل شده و سپس با استفاده از الگوریتم‌های پردازش تصویر تجزیه‌وتحلیل می‌شوند.\n",
        "\n",
        "## 3. سیستم‌های مخابراتی\n",
        "\n",
        "### انتقال داده‌های دیجیتال\n",
        "در سیستم‌های مخابراتی، سیگنال‌های آنالوگ از طریق امواج رادیویی یا کابل‌ها منتقل می‌شوند. این سیگنال‌ها باید برای انتقال دیجیتالی نمونه‌برداری شده و سپس به صورت دیجیتال ارسال شوند.\n",
        "- در **سیستم‌های تلفن همراه**، سیگنال‌های صوتی یا داده‌ها از طریق شبکه‌های موبایل به صورت دیجیتال منتقل می‌شوند.\n",
        "  \n",
        "### سیستم‌های رادیویی دیجیتال\n",
        "در رادیوهای دیجیتال و سیستم‌های تلویزیونی دیجیتال، سیگنال‌های آنالوگ باید نمونه‌برداری شده و به فرمت دیجیتال برای انتقال از طریق امواج رادیویی تبدیل شوند.\n",
        "\n",
        "## 4. سیستم‌های پزشکی\n",
        "\n",
        "### تصویر برداری پزشکی\n",
        "در فناوری‌هایی مانند **CT scan** و **MRI**، سیگنال‌های آنالوگ از بدن انسان توسط دستگاه‌های تصویربرداری جمع‌آوری می‌شوند و سپس نمونه‌برداری و دیجیتالی می‌شوند تا تصاویر پزشکی ساخته شوند.\n",
        "  \n",
        "### پایش و کنترل علائم حیاتی\n",
        "دستگاه‌های پزشکی مانند **EKG** و **EEG** برای نظارت بر ضربان قلب یا فعالیت‌های مغزی از سیگنال‌های آنالوگ استفاده می‌کنند که باید نمونه‌برداری شده و سپس پردازش شوند تا تجزیه‌وتحلیل‌های پزشکی صورت گیرد.\n",
        "\n",
        "## 5. اندازه‌گیری و سنجش\n",
        "\n",
        "### اندازه‌گیری پارامترهای فیزیکی\n",
        "در صنایع مختلف، از جمله **صنایع خودروسازی**، **کنترل کیفیت**، و **سنجش محیطی**، سنسورها داده‌های آنالوگ را جمع‌آوری کرده و این داده‌ها برای آنالیز و پردازش به سیگنال‌های دیجیتال نمونه‌برداری می‌شوند.\n",
        "- برای مثال، در **سنسورهای دما**، داده‌های آنالوگ از دماسنج‌ها باید نمونه‌برداری و به دیجیتال تبدیل شوند تا به سیستم‌های کنترلی ارسال گردند.\n",
        "\n",
        "## 6. سیستم‌های زمان واقعی\n",
        "\n",
        "### کنترل و هدایت سیستم‌ها\n",
        "در سیستم‌های کنترل زمان واقعی، مانند **روبات‌ها** یا **سیستم‌های اتوماسیون صنعتی**، سیگنال‌های آنالوگ از حسگرها نمونه‌برداری شده و سپس برای هدایت و کنترل سیستم به داده‌های دیجیتال تبدیل می‌شوند.\n",
        "  \n",
        "### پردازش داده‌های محیطی\n",
        "در سیستم‌های نظارتی و حسگرهای محیطی (مانند **دستگاه‌های پایش آلودگی هوا**)، داده‌ها به صورت آنالوگ اندازه‌گیری می‌شوند و باید نمونه‌برداری و دیجیتالی شوند تا به راحتی پردازش شوند.\n",
        "\n",
        "## 7. یادگیری ماشین و هوش مصنوعی\n",
        "\n",
        "### یادگیری عمیق و تحلیل داده‌ها\n",
        "در الگوریتم‌های یادگیری ماشین و مدل‌های **شبکه‌های عصبی عمیق (Deep Learning)**، داده‌های آنالوگ باید نمونه‌برداری شده و به فرمت دیجیتال تبدیل شوند تا مدل‌های AI بتوانند آن‌ها را تحلیل کنند. این فرآیند در کاربردهایی مانند **بینایی ماشین**، **پردازش زبان طبیعی**، و **تحلیل داده‌های بزرگ** استفاده می‌شود.\n",
        "\n",
        "## نتیجه‌گیری\n",
        "\n",
        "نمونه‌برداری در بسیاری از زمینه‌ها و صنایع مختلف از اهمیت ویژه‌ای برخوردار است. از پردازش صوتی و تصویری گرفته تا سیستم‌های مخابراتی و پزشکی، نمونه‌برداری به عنوان اولین گام در تبدیل سیگنال‌های آنالوگ به داده‌های دیجیتال برای تحلیل و پردازش‌های بیشتر نقش اساسی ایفا می‌کند.\n"
      ],
      "metadata": {
        "id": "AnEDAUqBWh6z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\\begin{lstlisting}[language=Python]\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# پارامترهای سیگنال\n",
        "fs_continuous = 1000  # فرکانس نمونه‌برداری پیوسته (Hz)\n",
        "t_continuous = np.linspace(0, 1, fs_continuous)  # زمان پیوسته\n",
        "f1 = 50  # فرکانس سیگنال اول (Hz)\n",
        "f2 = 150  # فرکانس سیگنال دوم (Hz)\n",
        "\n",
        "# سیگنال پیوسته\n",
        "signal_continuous = np.cos(2 * np.pi * f1 * t_continuous) + np.cos(2 * np.pi * f2 * t_continuous)\n",
        "\n",
        "# فرکانس نمونه‌برداری\n",
        "fs_sampled = 400  # فرکانس نمونه‌برداری (Hz)\n",
        "t_sampled = np.arange(0, 1, 1/fs_sampled)  # زمان نمونه‌برداری\n",
        "signal_sampled = np.cos(2 * np.pi * f1 * t_sampled) + np.cos(2 * np.pi * f2 * t_sampled)\n",
        "\n",
        "# رسم سیگنال‌ها\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# سیگنال پیوسته\n",
        "plt.subplot(2, 1, 1)\n",
        "plt.plot(t_continuous, signal_continuous, label=\"Continuous Signal\", color='b')\n",
        "plt.title(\"Continuous Signal (Band-Pass)\")\n",
        "plt.xlabel(\"Time [s]\")\n",
        "plt.ylabel(\"Amplitude\")\n",
        "plt.legend()\n",
        "\n",
        "# سیگنال نمونه‌برداری شده\n",
        "plt.subplot(2, 1, 2)\n",
        "plt.stem(t_sampled, signal_sampled, label=\"Sampled Signal\", basefmt=\" \", linefmt=\"r-\", markerfmt=\"ro\")\n",
        "plt.title(\"Sampled Signal (Band-Pass)\")\n",
        "plt.xlabel(\"Time [s]\")\n",
        "plt.ylabel(\"Amplitude\")\n",
        "plt.legend()\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\\end{lstlisting}\n"
      ],
      "metadata": {
        "id": "viuTG_uCW3Um"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}